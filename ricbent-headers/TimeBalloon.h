#pragma once

namespace TimeBalloon {

min(long, long);
initAchievementData(TimeBalloon::AchievementData*, unsigned long, unsigned long, nn::nex::qMap<signed char, nn::nex::DataStoreRatingInfo> const&);
getAchievementNum();
calcPlayerRank(TimeBalloon::AchievementData const*);
getRankForPlayedCoin(long);
getRankForFindCoin(long);
getRankForPlayedNum(long);
getRankForFindNum(long);
getRankForPlayedMax(long);
getRankForFindMax(long);
calcPlayerRank(IBalloonFindMyAchievementHolder const*);
getRankForTotalCoin(long);
getRankMax();
getRankMark(int);
getRankMaxTotal();
getRankForParam(int, int);
initBalloonDataServer(TimeBalloon::BalloonDataServer*);
isGotBalloon(TimeBalloon::BalloonData const&);
getPlayerRank(TimeBalloon::BalloonData const&);
getPlayedNum(TimeBalloon::BalloonData const&);
calcGotCoin(TimeBalloon::BalloonData const&);
calcProtectNum(TimeBalloon::BalloonData const&);
calcProtectCoin(TimeBalloon::BalloonData const&);
calcProtectCoin(int);
tryGetProfileData(TimeBalloon::BalloonData const&);
tryGetNickName(char const**, TimeBalloon::BalloonData const&);
tryGetNickName(TimeBalloon::BalloonData const&);
getBalloonPos(sead::Vector3<float>*, TimeBalloon::BalloonData const&);
setRatingInfo(TimeBalloon::BalloonData*, nn::nex::qMap<signed char, nn::nex::DataStoreRatingInfo> const&);
createBalloonData(TimeBalloon::BalloonData*, nn::nex::DataStoreSearchBalloonResult const&, FriendsProfileDataHolder*, bool);
createBalloonData(TimeBalloon::BalloonData*, unsigned long, unsigned long, unsigned short, nn::nex::qMap<signed char, nn::nex::DataStoreRatingInfo> const&, TimeBalloon::BalloonDataMetaBinary const*, FriendsProfileDataHolder*, bool);
getBalloonGotSlotId();
getBalloonPlayedSlotId();
isEnableFindBalloon(TimeBalloonList*);
isAssumeErrorBalloon(al::IUseDataStore const*);
isErrorNotFound(al::IUseDataStore*);
getBalloonPeriod();
getDataTypeAchievementId();
getDataTypeNoticeFromWorldId(int, GameDataHolderAccessor);
getWorldIdDebug(GameDataHolderAccessor);
getDataTypeNoticeIdDebug();
getDataTypeFromWorldId(int, GameDataHolderAccessor);
getDataTypeDebugWorldId();
getDataTypeCurrentWorldId(GameDataHolderAccessor);
isDataTypeWorldId(unsigned short, GameDataHolderAccessor);
getCurrentWorldId(GameDataHolderAccessor);
getWorldIdNumMax(GameDataHolderAccessor);
isWorldIdDebug(unsigned short, GameDataHolderAccessor);
getBalloonRatingIdPayCoinNum();
getBalloonRatingIdPlayedNum();
getBalloonRatingIdGotNum();
getBalloonRatingIdFriendPlayedNum();
createRatingCreateParam(nn::nex::qMap<signed char, nn::nex::DataStoreRatingInitParam>*);
createRatingDownloadParam(nn::nex::qVector<nn::nex::qMap<signed char, nn::nex::DataStoreRatingInfo> >*, int);
getAchievementRatingIdPlayedCoinNum();
getAchievementRatingIdFindCoinNum();
getAchievementRatingIdPlayedNum();
getAchievementRatingIdFindNum();
getAchievementRatingIdPlayedMax();
getAchievementRatingIdFindMax();
createAchievementRatingCreateParam(nn::nex::qMap<signed char, nn::nex::DataStoreRatingInitParam>*);
getPersistenceSlotIdAchievementDataId();
getOwnDataTypeList(nn::nex::qVector<unsigned short>*, GameDataHolderAccessor);
applyOwnData(TimeBalloonBalloonDataHolder*, sead::PtrArray<TimeBalloon::NoticeData>*, nn::nex::qVector<nn::nex::DataStoreMetaInfo> const&, TimeBalloon::AchievementData*, GameDataHolderAccessor, FriendsProfileDataHolder*);
getFindCoinMin(al::IUseSceneObjHolder*);
getFindCoinFirstPar(al::IUseSceneObjHolder*);
getFindCoinRetryPar(al::IUseSceneObjHolder*);
getDefaultSecFind(al::IUseSceneObjHolder*);
getDefaultSecPut(al::IUseSceneObjHolder*);
getPlayedCoinOnce(al::IUseSceneObjHolder*);
getPutBalloonCoinMax(al::IUseSceneObjHolder*);
getPlusTimeCoin(al::IUseSceneObjHolder*);
getTutorialBalloonCoin(al::IUseSceneObjHolder*);
getTotalCoinMax(al::IUseSceneObjHolder*);
getPlayedCoinMax(al::IUseSceneObjHolder*);
getFindCoinMax(al::IUseSceneObjHolder*);
getPlayedNumMax(al::IUseSceneObjHolder*);
getFindNumMax(al::IUseSceneObjHolder*);
getFindNumMaxMax(al::IUseSceneObjHolder*);
getFindCoinParam01(al::IUseSceneObjHolder*);
getFindCoinParam02(al::IUseSceneObjHolder*);
getFindCoinParam03(al::IUseSceneObjHolder*);
getFindCoinParam04(al::IUseSceneObjHolder*);
getFindCoinParam05(al::IUseSceneObjHolder*);
getFindNumParam01(al::IUseSceneObjHolder*);
getFindNumParam02(al::IUseSceneObjHolder*);
getFindNumParam03(al::IUseSceneObjHolder*);
getFindNumParam04(al::IUseSceneObjHolder*);
getFindNumParam05(al::IUseSceneObjHolder*);
getFindNumMaxParam01(al::IUseSceneObjHolder*);
getFindNumMaxParam02(al::IUseSceneObjHolder*);
getFindNumMaxParam03(al::IUseSceneObjHolder*);
getFindNumMaxParam04(al::IUseSceneObjHolder*);
getFindNumMaxParam05(al::IUseSceneObjHolder*);
getPlayedCoinParam01(al::IUseSceneObjHolder*);
getPlayedCoinParam02(al::IUseSceneObjHolder*);
getPlayedCoinParam03(al::IUseSceneObjHolder*);
getPlayedCoinParam04(al::IUseSceneObjHolder*);
getPlayedCoinParam05(al::IUseSceneObjHolder*);
getPlayedNumParam01(al::IUseSceneObjHolder*);
getPlayedNumParam02(al::IUseSceneObjHolder*);
getPlayedNumParam03(al::IUseSceneObjHolder*);
getPlayedNumParam04(al::IUseSceneObjHolder*);
getPlayedNumParam05(al::IUseSceneObjHolder*);
getPlayedNumMaxParam01(al::IUseSceneObjHolder*);
getPlayedNumMaxParam02(al::IUseSceneObjHolder*);
getPlayedNumMaxParam03(al::IUseSceneObjHolder*);
getPlayedNumMaxParam04(al::IUseSceneObjHolder*);
getPlayedNumMaxParam05(al::IUseSceneObjHolder*);
isPlayableTimeBalloon(GameDataHolderAccessor);
initEvent(TimeBalloonNpc*, al::IEventFlowEventReceiver*, al::IEventFlowQueryJudge const*);
startEvent(TimeBalloonNpc*, char const*, char const**);
tryUpdateEvent(TimeBalloonNpc*);
setSequenceId(TimeBalloonSequenceInfo*, TimeBalloon::SequenceId);
replacePlayer(TimeBalloonNpc*);
tryCalcPosStrikeArrow(sead::Vector3<float>*, al::LiveActor*, sead::Vector3<float> const&);
setTransCircle(TimeBalloonCircle*, al::LiveActor const*);
appearPutBalloon(TimeBalloonBalloon*);
appearFindBalloon(TimeBalloonBalloon*, char const*);
displayDistance(TimeBalloonBalloon*, al::SimpleLayoutTextHolder*);
displayDistanceBalloon(TimeBalloonBalloon*, al::SimpleLayoutTextHolder*, sead::Vector2<float> const&, float);
isOverPlayerStartRadius(TimeBalloonCircle*);
getBalloonDataDistance(TimeBalloon::BalloonData const*, sead::Vector3<float> const&);
appearAndStartAction(al::LayoutActor*, char const*);
appearGuideLayout(al::LayoutActor*, char const*);
getTutorialBalloonName();
getMyBalloonState(TimeBalloon::BalloonState*, TimeBalloonDataHolder*);
getBalloonState(TimeBalloon::BalloonState*, TimeBalloon::BalloonData const&);
getPlusTimeCoinNum();
getTutorialBalloonCoin();
getProtectCoinNum();
getPlayedCoinNum();
isEnablePayFindCoin(al::LiveActor const*, int);
isTriggerPause(al::IUseSceneObjHolder const*);
isExistBalloonGame(char const*);
startActionBalloonIconLayout(al::LayoutActor*, int);
getGotPlayerId(TimeBalloon::NoticeData*);
getPlayPlayerId(TimeBalloon::NoticeData*);
getNoticeGotSlotId();
getNoticePlayedSlotId();
creataNoticeData(TimeBalloon::NoticeData*, unsigned long, unsigned short, TimeBalloon::NoticeDataMetaBinary const*, FriendsProfileDataHolder*);
clearNotice(TimeBalloon::NoticeData*);
tryReadResult(bool*, char const*, char const*, unsigned long, char const*, sead::Heap*);
getPlayCountTierMax0(al::IUseNexUtility const*);
getPlayCountTierMax1(al::IUseNexUtility const*);
getPlayCountTierMax2(al::IUseNexUtility const*);
getPayCoinTierNum0(al::IUseNexUtility const*);
getPayCoinTierNum1(al::IUseNexUtility const*);
getPayCoinTierNum2(al::IUseNexUtility const*);
getRetryPayCoinTierNum0(al::IUseNexUtility const*);
getRetryPayCoinTierNum1(al::IUseNexUtility const*);
getRetryPayCoinTierNum2(al::IUseNexUtility const*);
getFindCoinMin(al::IUseNexUtility const*);
getFindCoinFirstPar(al::IUseNexUtility const*);
getFindCoinRetryPar(al::IUseNexUtility const*);
getDefaultSecFind(al::IUseNexUtility const*);
getDefaultSecPut(al::IUseNexUtility const*);
getPlayedCoinOnce(al::IUseNexUtility const*);
getPutBalloonCoinMax(al::IUseNexUtility const*);
getPlusTimeCoin(al::IUseNexUtility const*);
getTutorialBalloonCoin(al::IUseNexUtility const*);
getTotalCoinMax(al::IUseNexUtility const*);
getPlayedCoinMax(al::IUseNexUtility const*);
getFindCoinMax(al::IUseNexUtility const*);
getPlayedNumMax(al::IUseNexUtility const*);
getFindNumMax(al::IUseNexUtility const*);
getFindNumMaxMax(al::IUseNexUtility const*);
getFindCoinParam01(al::IUseNexUtility const*);
getFindCoinParam02(al::IUseNexUtility const*);
getFindCoinParam03(al::IUseNexUtility const*);
getFindCoinParam04(al::IUseNexUtility const*);
getFindCoinParam05(al::IUseNexUtility const*);
getFindNumParam01(al::IUseNexUtility const*);
getFindNumParam02(al::IUseNexUtility const*);
getFindNumParam03(al::IUseNexUtility const*);
getFindNumParam04(al::IUseNexUtility const*);
getFindNumParam05(al::IUseNexUtility const*);
getFindNumMaxParam01(al::IUseNexUtility const*);
getFindNumMaxParam02(al::IUseNexUtility const*);
getFindNumMaxParam03(al::IUseNexUtility const*);
getFindNumMaxParam04(al::IUseNexUtility const*);
getFindNumMaxParam05(al::IUseNexUtility const*);
getPlayedCoinParam01(al::IUseNexUtility const*);
getPlayedCoinParam02(al::IUseNexUtility const*);
getPlayedCoinParam03(al::IUseNexUtility const*);
getPlayedCoinParam04(al::IUseNexUtility const*);
getPlayedCoinParam05(al::IUseNexUtility const*);
getPlayedNumParam01(al::IUseNexUtility const*);
getPlayedNumParam02(al::IUseNexUtility const*);
getPlayedNumParam03(al::IUseNexUtility const*);
getPlayedNumParam04(al::IUseNexUtility const*);
getPlayedNumParam05(al::IUseNexUtility const*);
getPlayedNumMaxParam01(al::IUseNexUtility const*);
getPlayedNumMaxParam02(al::IUseNexUtility const*);
getPlayedNumMaxParam03(al::IUseNexUtility const*);
getPlayedNumMaxParam04(al::IUseNexUtility const*);
getPlayedNumMaxParam05(al::IUseNexUtility const*);
getTimeBalloonFolderName();
getPlayerIdNone();
getBalloonIdNone();
getBalloonIdTutorial();
isBalloonIdNone(unsigned long);

} 
