#pragma once

class StageScene
{
public:
    StageScene();
    ~StageScene();
    init(al::SceneInitInfo const&);
    stopCollectBgm();
    tryChangeDemo();
    appear();
    control();
    isIgnoreAddPlayTime() const;
    kill();
    isGetGrandShineAndEnableWipeClose() const;
    isGetGrandShine() const;
    isVeilEnd() const;
    isE3End() const;
    isDefeatKoopaLv1() const;
    isMissEnd() const;
    isHackEnd() const;
    isLoadData() const;
    isModeSelectEnd() const;
    isNewGame() const;
    isChangeLanguage() const;
    getLanguage() const;
    isEnableSave() const;
    isPause() const;
    drawMain() const;
    isEnableToDrawOddSpace() const;
    updatePlay();
    endDemoAndChangeNerve();
    updateKitListPostAndChangeNextNerve(al::Nerve const*);
    exeStartStageBgm();
    exePlay();
    updateStageSceneLayoutForKoopaHack();
    tryChangeSnapShot();
    tryStartWarp();
    tryChangePause();
    tryChangeList();
    updateStageInfoLayout();
    endPlay();
    exeAmiibo();
    exeMiss();
    exeSnapShot();
    exePause();
    exeDemoStageStart();
    exeDemoStageStartCapManHeroTalk();
    exeDemoNormal();
    tryAppearDemoLayout();
    exeDemoNormalBazookaElectric();
    exeDemoWithPlayer();
    exeSkipDemo();
    exeDemoTalk();
    tryUpdateAllForFirst();
    exeDemoWithPlayerUseCoin();
    exeDemoCountCoin();
    exeDemoHackStart();
    exeDemoHackStartFirst();
    exeDemoCarryMeat();
    exeDemoTitleLogo();
    exeDemoShineGet();
    exeDemoShineMainGet();
    exeWaitStartWarpForSession();
    exeDemoShineGrandGet();
    exeDemoDamageStopPlayer();
    exeDemoGetLifeMaxUpItem();
    exeDemoSceneStartPlayerWalk();
    exeAppearFromWorldWarpHole();
    exeWaitWarpToCheckpoint();
    exeWarpToCheckpoint();
    exeArriveAtCheckpoint();
    exeWarp();
    exeDemoWorldIntroCamera();
    exeDemoPlayerDown();
    exeDemoScenarioCamera();
    exeDemoAppearFromHome();
    exeDemoReturnToHome();
    exeDemoRiseMapParts();
    exeDemoRisePyramid();
    exeDemoShineChipComplete();
    exeRaceManRace();
    exeRaceYukimaru();
    exeRaceYukimaruTutorial();
    exeRadicon();
    exeCollectionList();
    exeShop();
    exeCloset();
    exeCollectBgm();
    exeMiniGameRanking();
    exeTimeBalloon();
    isOpenEndWorldMapWipe() const;
};
