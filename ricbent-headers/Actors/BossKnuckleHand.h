#pragma once

class BossKnuckleHand
{
public:
    BossKnuckleHand(al::LiveActor const*, char const*, bool);
    init(al::ActorInitInfo const&);
    startDefaultAnim();
    attackSensor(al::HitSensor*, al::HitSensor*);
    isAttack() const;
    receiveMsg(al::SensorMsg const*, al::HitSensor*, al::HitSensor*);
    isSwoonOrNumbness() const;
    control();
    calcAnim();
    kill();
    appear();
    isHack() const;
    isSwoonHintTiming() const;
    isSwoonEnd() const;
    isHitSand() const;
    isWait() const;
    isRise() const;
    isAttackSign() const;
    isBreak() const;
    isBeat() const;
    isRocketPunch() const;
    isSideAttackStopStart() const;
    isSideAttackStopEnd() const;
    isAttackSuccessed();
    isHackEnd() const;
    isHide() const;
    syncBody();
    addDemoActor();
    commandThrowIce(bool);
    commandBeatStart();
    commandBeatEnd();
    commandSearchAndFallAttack(bool, int);
    commandMoveBodySync();
    commandMoveBodySyncForce();
    commandRocketPunch(sead::Vector3<float> const&, sead::Vector3<float> const&);
    commandSideAttack(int);
    commandKillerAttack();
    commandStartDemoBattleStart();
    commandEndDemoBattleStart(bool);
    commandStartDemoBattleEnd();
    commandBreak(bool);
    commandDisappear();
    commandRestore(float);
    commandRestoreOnPos(sead::Vector3<float> const&);
    commandHackEnd();
    exeWait();
    exeThrowUp();
    exeThrowSide();
    exeMoveBodySync();
    exeMoveSearchStart();
    exeMoveSearch();
    exeAttackFallRise();
    exeAttackFallStop();
    exeAttackFall();
    exeAttackFallHitSand();
    exeRise();
    exeNumbness();
    exeSearchKillerAttack();
    exeBeatStart();
    exeBeat();
    exeBeatEnd();
    calcToBodyDir(sead::Vector3<float>*) const;
    exeSideAttackSearch();
    exeSideAttackSign();
    exeSideAttack();
    exeSideAttackStop();
    exeSideAttackEnd();
    exeHackWait();
    exeHackStartWait();
    exeHackStart();
    startHackAnim();
    exeHackMoveStart();
    exeHack();
    startHackEndSignAnim();
    exeHackAttackHit();
    exeHackDamageReaction();
    exeHackEnd();
    exeBreak();
    exeRestore();
    exeRocketPunchStart();
    exeRocketPunch();
    exeRocketReturn();
    exeHide();
    exeDemoBattleStart();
    exeDemoBattleEnd();
};
