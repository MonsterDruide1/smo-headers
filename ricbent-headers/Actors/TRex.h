#pragma once

class TRex
{
public:
    TRex(char const*);
    init(al::ActorInitInfo const&);
    getLeftFootIK() const;
    getRightFootIK() const;
    initAfterPlacement();
    appear();
    kill();
    movement();
    control();
    updateCollider();
    calcAnim();
    attackSensor(al::HitSensor*, al::HitSensor*);
    receiveMsg(al::SensorMsg const*, al::HitSensor*, al::HitSensor*);
    exeSleep();
    endSleep();
    exeSwoonStart();
    exeSwoonStartLand();
    exeSwoon();
    exeFall();
    exeLand();
    exeHackStart();
    exeHackWait();
    exeHackAttackWait();
    endHackAttackWait();
    exeHackMove();
    exeHackMoveAfter();
    exeHackMoveGround();
    exeHackMoveJump();
    exeHackMoveEnd();
    exeHackHoldJump();
    exeHackFall();
    exeHackJumpStart();
    exeHackJump();
    exeHackTurn();
    exeHackTurnEnd();
    exeHackLand();
    endHackLand();
    exeReset();
    resetAllJointController();
    exePatrolWalkStart();
    exePatrolWalk();
    exePatrolWalkAfter();
    exePatrolWalkGround();
    exePatrolWalkEndL();
    exePatrolWaitSniff();
    exePatrolNoticeSniff();
    exePatrolTurnMario();
    exePatrolTurnBack();
    exePatrolDash();
    exePatrolHoldJump();
    exePatrolFall();
    exePatrolLand();
    exePatrolSwoonStartDashClash();
    exePatrolSwoonStart();
    exePatrolSwoon();
    exePatrolSwoonEnd();
    exePatrolReset();
    isEnableBreakPartsForceScroll() const;
    getMaxSinkGroundHeight();
    getHoldJumpStartUpSpeed();
    getHoldJumpMoveAccel();
    getPatrolGravityAccel();
    getPatrolGroundFriction();
    getMaxPatrolFallSpeedOnGround();
    getHeadColliderShapeName();
    exeForceScrollStartFall();
    exeForceScrollStartLand();
    exeForceScrollRunStart();
    exeForceScrollRun();
    exeForceScrollAttackSign();
    exeForceScrollAttackStart();
    exeForceScrollAttack();
    endForceScrollAttack();
    exeForceScrollAttackEnd();
    exeForceScrollEndFallStart();
    exeForceScrollEndFall();
    getPlayerCollider() const;
};
