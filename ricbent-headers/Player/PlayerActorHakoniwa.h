#pragma once

class PlayerActorHakoniwa
{
public:
    PlayerActorHakoniwa(char const*);
    initPlayer(al::ActorInitInfo const&, PlayerInitInfo const&);
    updateModelShadowDropLength();
    executeAfterCapTarget();
    syncSensorAndCollision();
    initAfterPlacement();
    movement();
    checkDamageFromCollision();
    executePreMovementNerveChange();
    control();
    updateCarry();
    updateCollider();
    isEnableDemo();
    isDamageStopDemo() const;
    startDemo();
    setNerveOnGround();
    endDemo();
    startDemoPuppetable();
    startPlayerPuppet();
    cancelHackPlayerPuppetDemo();
    endDemoPuppetable();
    endPlayerPuppet();
    startDemoShineGet();
    endDemoShineGet();
    startDemoMainShineGet();
    endDemoMainShineGet();
    startDemoHack();
    endDemoHack();
    startDemoKeepBind();
    noticeDemoKeepBindExecute();
    endDemoKeepBind();
    startDemoKeepCarry();
    endDemoKeepCarry();
    getDemoActor();
    getDemoAnimator();
    getPlayerPuppet();
    getPlayerCollision() const;
    getPortNo() const;
    exeWait();
    tryActionCapReturn();
    tryActionCapSpinAttack();
    exeSquat();
    tryActionSeparateCapThrow();
    exeRun();
    exeSlope();
    exeRolling();
    exeSpinCap();
    tryChangeNerveFromAir();
    tryActionCapSpinAttackMiss();
    exeJump();
    exeCapCatchPop();
    exeWallAir();
    exeWallCatch();
    exeGrabCeil();
    exePoleClimb();
    exeHipDrop();
    exeHeadSliding();
    exeLongJump();
    exeFall();
    exeSandSink();
    exeSandGeyser();
    exeRise();
    exeSwim();
    exeDamage();
    exeDamageSwim();
    exeDamageFire();
    exePress();
    exeHack();
    exeEndHack();
    exeBind();
    tryActionCapSpinAttackBindEnd();
    exeDemo();
    exeCamera();
    exeAbyss();
    exeDead();
    checkDeathArea();
    sendCollisionMsg();
    attackSensor(al::HitSensor*, al::HitSensor*);
    receiveMsg(al::SensorMsg const*, al::HitSensor*, al::HitSensor*);
    receivePushMsg(al::SensorMsg const*, al::HitSensor*, al::HitSensor*, float);
    tryActionCapSpinAttackImpl(bool);
    getPlayerHackKeeper() const;
    getPlayerInfo() const;
    getActorDimensionKeeper() const;
};
