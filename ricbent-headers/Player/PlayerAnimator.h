#pragma once

class PlayerAnimator
{
public:
    PlayerAnimator(PlayerModelHolder const*, al::ActorDitherAnimator*);
    startAnim(sead::SafeStringBase<char> const&);
    updateAnimFrame();
    updateModel();
    copyAnim();
    startAnimCommon(sead::SafeStringBase<char> const&);
    setAnimRate(float);
    startAnimSpinAttack(sead::SafeStringBase<char> const&);
    setAnimRateCommon(float);
    setAnimFrame(float);
    setAnimFrameCommon(float);
    isAnimEnd() const;
    isAnim(sead::SafeStringBase<char> const&) const;
    isCurrentAnimOneTime() const;
    getAnimFrame() const;
    getAnimFrameMax() const;
    getAnimFrameRate() const;
    clearInterpolation();
    startSubAnim(sead::SafeStringBase<char> const&);
    startSubAnimOnlyAir(sead::SafeStringBase<char> const&);
    endSubAnim();
    applyBlendWeight();
    setSubAnimFrame(float);
    setSubAnimRate(float);
    isSubAnimEnd() const;
    isSubAnim(sead::SafeStringBase<char> const&) const;
    getSubAnimFrame() const;
    getSubAnimFrameMax() const;
    isUpperBodyAnimAttached() const;
    isUpperBodyAnimEnd() const;
    isUpperBodyAnim(sead::SafeStringBase<char> const&) const;
    startUpperBodyAnim(sead::SafeStringBase<char> const&);
    startPartsPartialAnim(sead::SafeStringBase<char> const&);
    startUpperBodyAnimSubParts(sead::SafeStringBase<char> const&);
    startUpperBodyAnimAndHeadVisKeep(sead::SafeStringBase<char> const&);
    clearUpperBodyAnim();
    setBlendWeight(float, float, float, float, float, float);
    getBlendWeight(int);
    startAnimDead();
    startPress();
    forceCapOn();
    forceCapOff();
    getModelAlpha() const;
    updateModelAlpha();
    setModelAlpha(float);
    resetModelAlpha();
    endDemoInvalidateModelAlpha();
    startSnapShotMode();
    endSnapShotMode();
    startEyeControlAnim(bool);
    endEyeControlAnim(int);
    clearEndEyeControlAnimDelay();
    updateEyeControlAnim();
    startRightHandAnim(char const*);
    overwrideYoshiEatVis();
    restartYoshiActionVis();
    getMario3DWaitFrameMax() const;
    getRunStartAnimFrameMax() const;
    getRunStartAnimBlendRate() const;
    recordRunStartAnimRate(float);
    calcModelJointRootMtx(sead::Matrix34<float>*) const;
    startPartsAnim(sead::SafeStringBase<char> const&);
    setPartsAnimRate(float, char const*);
    setPartsAnimFrame(float, char const*);
    copyAnimLocal();
};
