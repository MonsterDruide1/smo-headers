#pragma once

#include "game/GameData/GameDataHolderAccessor.h"
#include "SceneInitInfo.h"
#include <al/nerve/NerveExecutor.h>
#include "al/audio/AudioKeeper.h"
#include "al/camera/CameraDirector.h"
#include "al/scene/SceneObjHolder.h"
#include "types.h"

namespace al {
	class StageResourceKeeper;
	class LiveActorKit;
	class LayoutKit;
	class SceneStopCtrl;
	class SceneMsgCtrl;
	class ScreenCoverCtrl;
	class AudioDirector;
}

namespace al
{
    class Scene : public al::NerveExecutor, public al::IUseAudioKeeper, public al::IUseCamera, public al::IUseSceneObjHolder
    {
    public:
        Scene(const char *);

        virtual ~Scene();
        virtual void init(const al::SceneInitInfo &);
        virtual void appear();
        virtual void kill();
        virtual void movement();
        virtual void control();
        virtual void drawMain();
        virtual void drawSub();
        virtual al::AudioKeeper* getAudioKeeper();
        virtual al::SceneObjHolder* getSceneObjHolder();
        virtual al::CameraDirector* getCameraDirector(); 
        
        //unsigned char _28[0xD8-0x28];
		bool *isAlive; // 28
		__int64_t unkString; // 30
		unsigned char unk[0x50]; // 38 to 88
		al::StageResourceKeeper *mStageResourceKeeper; // 88
		al::LiveActorKit *mSceneLiveActorKit; // 90
		al::LayoutKit *mLayoutKit; // 98
		al::SceneObjHolder *SceneObjHolder; // A0
		al::SceneStopCtrl *mSceneStopCtrl; // A8
		al::SceneMsgCtrl *mSceneMsgCtrl; // B0
		al::ScreenCoverCtrl *mScreenCoverCtrl; // B8
		al::AudioDirector *mAudioDirector; // C0
		al::AudioKeeper *mAudioKeeper; // C8 to D0
    };
};